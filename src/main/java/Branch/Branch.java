/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Branch;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AKThu
 */
public class Branch extends javax.swing.JFrame {

    DatabaseConnection databaseConnection = new DatabaseConnection();
    
    
    /**
     * Creates new form Branch
     */
    public Branch() {
        initComponents();
        dbconnection = databaseConnection.databaseConn();
        JOptionPane.showMessageDialog(null, "Connected");
        getallData();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_header = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_Save = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbl_branchID = new javax.swing.JLabel();
        lbl_branchName = new javax.swing.JLabel();
        txt_branchID = new javax.swing.JTextField();
        txt_branchName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_branch = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btn_prev = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        btn_first = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_header.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_header.setText("Branch Data");

        btn_Save.setText("Save");
        btn_Save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        btn_del.setText("Delete");
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_clear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_del)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_exit)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                .addComponent(btn_del, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                            .addComponent(btn_Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btn_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lbl_branchID.setText("Branch ID");

        lbl_branchName.setText("Branch Name");

        txt_branchID.setEditable(false);
        txt_branchID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txt_branchName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_branchName)
                    .addComponent(lbl_branchID))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_branchID, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txt_branchName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_branchID)
                    .addComponent(txt_branchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_branchName)
                    .addComponent(txt_branchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbl_branch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Branch ID", "Branch Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_branch);
        if (tbl_branch.getColumnModel().getColumnCount() > 0) {
            tbl_branch.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbl_branch.getColumnModel().getColumn(1).setPreferredWidth(366);
        }

        btn_prev.setIcon(new javax.swing.ImageIcon("C:\\Users\\AKThu\\Desktop\\Dummy Folder\\1. Java Swing POS\\Company Data\\prev.png")); // NOI18N
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });

        btn_next.setIcon(new javax.swing.ImageIcon("C:\\Users\\AKThu\\Desktop\\Dummy Folder\\1. Java Swing POS\\Company Data\\next.png")); // NOI18N
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_last.setIcon(new javax.swing.ImageIcon("C:\\Users\\AKThu\\Desktop\\Dummy Folder\\1. Java Swing POS\\Company Data\\right.png")); // NOI18N
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        btn_first.setIcon(new javax.swing.ImageIcon("C:\\Users\\AKThu\\Desktop\\Dummy Folder\\1. Java Swing POS\\Company Data\\left.png")); // NOI18N
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_header)
                                        .addGap(112, 112, 112)))))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_header)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        try{
            ExecuteQuery("S");
            JOptionPane.showMessageDialog(null, "Saved Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        this.clear(evt);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try{
            ExecuteQuery("U");
            JOptionPane.showMessageDialog(null, "Updated Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
        try{
            ExecuteQuery("D");
            JOptionPane.showMessageDialog(null, "Deleted Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        prevID = Integer.valueOf(txt_branchID.getText()) - 1;
        try{
            GetQuery("prev");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        nextID = Integer.valueOf(txt_branchID.getText()) + 1;
        try{
            GetQuery("next");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        try{
            GetQuery("last");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_lastActionPerformed

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        try{
            GetQuery("first");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_firstActionPerformed
    
    //clear data in the textbox and make it ready for inserting new data
    private void clear(java.awt.event.ActionEvent evt) {
        //1.get last item (get all the column)
        btn_lastActionPerformed(evt);
        
        //2.set the next available ID for inserting new data
        if(txt_branchID.getText().isEmpty()){
            txt_branchID.setText("1");
        } else { 
            txt_branchID.setText(String.valueOf(Integer.valueOf(txt_branchID.getText()) + 1 ));
        }
        
        //3.clear every textfield except ID
        txt_branchName.setText("");
    }
    
    //get data from database and show in the table
    private void getallData(){
        try  {

           String sqlSelectDataFromDatabase = "Select \"BRCH_ID\", \"BRCH_NAME\" from \"BRCH_TBL\" order by \"BRCH_ID\" asc";
           preStatement = dbconnection.prepareStatement(sqlSelectDataFromDatabase);
           result = preStatement.executeQuery();
           clearTable(); // To Clear Existing Data
           while(result.next()) {
               String Branchname = result.getString("BRCH_ID");
               String BranchID = result.getString("BRCH_NAME");
           

               DefaultTableModel dftable = (DefaultTableModel) tbl_branch.getModel();
               Object[] obj = {Branchname,BranchID};
               dftable.addRow(obj);
                   }
             } catch (SQLException e) {
                 printSQLException(e);
       }
    }
    
    //clear table
    private void clearTable(){
        DefaultTableModel defaultModel = (DefaultTableModel) tbl_branch.getModel();
        defaultModel.getDataVector().removeAllElements();
        revalidate();
    }
    
    //execute query
    private void ExecuteQuery(String queryType) throws SQLException {
        try{
            
            //1.connecting to database
            DatabaseConnection connection = new DatabaseConnection();
            connection.databaseConn();
            Statement statement = connection.Conn.createStatement();
            
            //2.get the user entered data
            brID = txt_branchID.getText();
            brName = txt_branchName.getText();
            System.out.println(txt_branchID.getText());
            
            //3.checking query type to execute
            if(queryType=="S"){
                query = "INSERT INTO \"BRCH_TBL\" ("
                        + "\"BRCH_ID\","
                        + "\"BRCH_NAME\""
                        + ") VALUES ("
                        + brID + ","
                        + "'" + brName +"'"
                        + ");";
            } else if (queryType=="U"){
                query = "UPDATE \"BRCH_TBL\" SET "
                        + "\"BRCH_NAME\"='" + brName + "'"
                        + "WHERE \"BRCH_ID\"="+ brID + "; ";
            } else if (queryType=="D"){
                query = "DELETE FROM \"BRCH_TBL\" WHERE \"BRCH_ID\" = " + brID + ";";
            }
            
            //4.execute query
            statement.execute(query);
            connection.Conn.close();
        } catch(SQLException e){
            printSQLException(e);
        }
    }
    
    //get query
    private void GetQuery(String queryType) throws SQLException {
        try{
             
            //1.connecting to database
            DatabaseConnection connection = new DatabaseConnection();
            connection.databaseConn();
            Statement statement = connection.Conn.createStatement();
            
            //2.checking query type to execute
            if(queryType=="first"){
                query = "SELECT \"BRCH_ID\", \"BRCH_NAME\"FROM \"BRCH_TBL\"ORDER BY \"BRCH_ID\" ASC LIMIT 1;";
            }else if(queryType=="last"){
                query = "SELECT \"BRCH_ID\", \"BRCH_NAME\"FROM \"BRCH_TBL\"ORDER BY \"BRCH_ID\" DESC LIMIT 1;";
            }else if(queryType=="next"){
                if(txt_branchID.getText().isEmpty()){
                    query = "SELECT \"BRCH_ID\", \"BRCH_NAME\"FROM \"BRCH_TBL\"ORDER BY \"BRCH_ID\" ASC LIMIT 1;";
                }else{
                    query = "SELECT \"BRCH_ID\", \"BRCH_NAME\" FROM \"BRCH_TBL\" where \"BRCH_ID\" = "
                            + nextID +";";
                }
            }else if(queryType=="prev"){
                if(txt_branchID.getText().isEmpty()){
                    query = "SELECT \"BRCH_ID\", \"BRCH_NAME\"FROM \"BRCH_TBL\"ORDER BY \"BRCH_ID\" DESC LIMIT 1;";
                }else{
                    query = "SELECT \"BRCH_ID\", \"BRCH_NAME\" FROM \"BRCH_TBL\" where \"BRCH_ID\" = "
                            + prevID +";";
                }
            }
            
            //3.execute query & return the result
            result = statement.executeQuery(query);
            if(result.next()){
                txt_branchID.setText(result.getString("BRCH_ID"));
                txt_branchName.setText(result.getString("BRCH_NAME"));
            }
            
        }catch(SQLException e){
            printSQLException(e);
        }
    }
    
     //Query Exception handling
    private static void printSQLException(SQLException ex) {
        for (Throwable e : ex) {
            if (e instanceof SQLException) {
                e.printStackTrace(System.err);
                System.err.println("SQLState: " + ((SQLException) e).getSQLState());
                System.err.println("Error Code: " + ((SQLException) e).getErrorCode());
                System.err.println("Message: " + e.getMessage());
                Throwable t = ex.getCause();
                while (t != null) {
                    System.out.println("Cause: " + t);
                    t = t.getCause();
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Branch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Branch branch = new Branch();
                branch.setVisible(true);
                branch.setTitle("Branch Data");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_del;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JButton btn_update;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_branchID;
    private javax.swing.JLabel lbl_branchName;
    private javax.swing.JLabel lbl_header;
    private javax.swing.JTable tbl_branch;
    private javax.swing.JTextField txt_branchID;
    private javax.swing.JTextField txt_branchName;
    // End of variables declaration//GEN-END:variables
    
    private String query = null; // to temporarily storing query statement for execution
    ResultSet result = null; // to store data returned from query execution
    PreparedStatement preStatement;
    Connection dbconnection;
    int nextID;
    int prevID;
    String brID;
    String brName;
    
}

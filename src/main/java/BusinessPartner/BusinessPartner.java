/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BusinessPartner;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AKThu
 */
public class BusinessPartner extends javax.swing.JFrame {

    DatabaseConnection databaseConnection = new DatabaseConnection();
    
    /**
     * Creates new form BusinessPartner
     */
    public BusinessPartner() {
        initComponents();
        dbconnection = databaseConnection.databaseConn();
        JOptionPane.showMessageDialog(null, "Connected");
        getallData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_actionButtons = new javax.swing.JPanel();
        btn_Save = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_del = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        pnl_form = new javax.swing.JPanel();
        lbl_BPID = new javax.swing.JLabel();
        txt_BPID = new javax.swing.JTextField();
        lbl_BPName = new javax.swing.JLabel();
        txt_BPName = new javax.swing.JTextField();
        lbl_BPType = new javax.swing.JLabel();
        lbl_BPGroup = new javax.swing.JLabel();
        lbl_BPClass = new javax.swing.JLabel();
        txt_BPEmail = new javax.swing.JTextField();
        lbl_BPEmail = new javax.swing.JLabel();
        txt_BPJoinDate = new javax.swing.JTextField();
        lbl_BPStatus = new javax.swing.JLabel();
        lbl_BPPhone = new javax.swing.JLabel();
        txt_BPPhone = new javax.swing.JTextField();
        txt_BPCity = new javax.swing.JTextField();
        lbl_BPCity = new javax.swing.JLabel();
        txt_BPTownship = new javax.swing.JTextField();
        lbl_BPTownship = new javax.swing.JLabel();
        txt_BPStatus = new javax.swing.JTextField();
        lbl_BPAddress = new javax.swing.JLabel();
        lbl_BPJoinDate = new javax.swing.JLabel();
        lbl_BPDistrict = new javax.swing.JLabel();
        txt_BPDistrict = new javax.swing.JTextField();
        txt_BPAddress = new javax.swing.JTextField();
        cbox_BPType = new javax.swing.JComboBox<>();
        cbox_BPGroup = new javax.swing.JComboBox<>();
        cbox_BPClass = new javax.swing.JComboBox<>();
        pnl_Header = new javax.swing.JPanel();
        lbl_BusinessPartner = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_BP = new javax.swing.JTable();
        pnl_navigationButtons = new javax.swing.JPanel();
        btn_prev = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        btn_first = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_Save.setText("Save");
        btn_Save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_del.setText("Delete");
        btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_actionButtonsLayout = new javax.swing.GroupLayout(pnl_actionButtons);
        pnl_actionButtons.setLayout(pnl_actionButtonsLayout);
        pnl_actionButtonsLayout.setHorizontalGroup(
            pnl_actionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_actionButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_clear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_del)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_exit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_actionButtonsLayout.setVerticalGroup(
            pnl_actionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_actionButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_actionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_actionButtonsLayout.createSequentialGroup()
                        .addComponent(btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnl_actionButtonsLayout.createSequentialGroup()
                        .addGroup(pnl_actionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_clear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(btn_update, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_del, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_exit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        lbl_BPID.setText("ID");

        txt_BPID.setEditable(false);
        txt_BPID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPName.setText("Name");

        txt_BPName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPType.setText("Type");

        lbl_BPGroup.setText("Group");

        lbl_BPClass.setText("Class");

        txt_BPEmail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPEmail.setText("Email");

        txt_BPJoinDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPStatus.setText("Status");

        lbl_BPPhone.setText("Phone");

        txt_BPPhone.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txt_BPCity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPCity.setText("City");

        txt_BPTownship.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPTownship.setText("Township");

        txt_BPStatus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbl_BPAddress.setText("Address");

        lbl_BPJoinDate.setText("Join Date");

        lbl_BPDistrict.setText("District");

        txt_BPDistrict.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txt_BPAddress.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        cbox_BPType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Supplier", "Employee", "Customer" }));
        cbox_BPType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_BPTypeActionPerformed(evt);
            }
        });

        cbox_BPGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbox_BPClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnl_formLayout = new javax.swing.GroupLayout(pnl_form);
        pnl_form.setLayout(pnl_formLayout);
        pnl_formLayout.setHorizontalGroup(
            pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_formLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_BPEmail)
                    .addComponent(lbl_BPType)
                    .addComponent(lbl_BPPhone)
                    .addComponent(lbl_BPTownship)
                    .addComponent(lbl_BPName)
                    .addComponent(lbl_BPID)
                    .addComponent(lbl_BPAddress)
                    .addComponent(lbl_BPJoinDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_BPID)
                    .addComponent(txt_BPName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_formLayout.createSequentialGroup()
                        .addComponent(cbox_BPType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_BPGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbox_BPGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_BPClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbox_BPClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txt_BPEmail, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_formLayout.createSequentialGroup()
                        .addComponent(txt_BPTownship, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(lbl_BPCity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_BPCity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_BPDistrict)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_BPDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_BPPhone, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_BPAddress, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_formLayout.createSequentialGroup()
                        .addComponent(txt_BPJoinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_BPStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_BPStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_formLayout.setVerticalGroup(
            pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_formLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_BPID)
                    .addComponent(txt_BPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_BPType)
                    .addComponent(lbl_BPGroup)
                    .addComponent(lbl_BPClass)
                    .addComponent(cbox_BPType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_BPGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_BPClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPTownship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPTownship)
                    .addComponent(lbl_BPCity)
                    .addComponent(txt_BPCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPDistrict)
                    .addComponent(txt_BPDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_BPJoinDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPJoinDate)
                    .addComponent(txt_BPStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_BPStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_BusinessPartner.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_BusinessPartner.setText("Business Partner");

        javax.swing.GroupLayout pnl_HeaderLayout = new javax.swing.GroupLayout(pnl_Header);
        pnl_Header.setLayout(pnl_HeaderLayout);
        pnl_HeaderLayout.setHorizontalGroup(
            pnl_HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_HeaderLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(lbl_BusinessPartner)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_HeaderLayout.setVerticalGroup(
            pnl_HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_HeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_BusinessPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tbl_BP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Class", "Group", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_BP);

        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });

        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_navigationButtonsLayout = new javax.swing.GroupLayout(pnl_navigationButtons);
        pnl_navigationButtons.setLayout(pnl_navigationButtonsLayout);
        pnl_navigationButtonsLayout.setHorizontalGroup(
            pnl_navigationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_navigationButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_navigationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_navigationButtonsLayout.setVerticalGroup(
            pnl_navigationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_navigationButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(pnl_actionButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnl_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnl_navigationButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnl_navigationButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_actionButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        try{
            ExecuteQuery("S");
            JOptionPane.showMessageDialog(null, "Saved Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        this.clear(evt);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delActionPerformed
        try{
            ExecuteQuery("D");
            JOptionPane.showMessageDialog(null, "Deleted Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_delActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
         try{
            ExecuteQuery("U");
            JOptionPane.showMessageDialog(null, "Updated Successfully");
            this.clear(evt);
            getallData();
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        try{
            GetQuery("prev");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        try{
            GetQuery("next");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        try{
            GetQuery("last");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_lastActionPerformed

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        try{
            GetQuery("first");
        }catch(SQLException e){
            printSQLException(e);
        }
    }//GEN-LAST:event_btn_firstActionPerformed

    private void cbox_BPTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_BPTypeActionPerformed

    }//GEN-LAST:event_cbox_BPTypeActionPerformed

     //clear data in the textbox and make it ready for inserting new data
    private void clear(java.awt.event.ActionEvent evt) {
        //1.get last item (get all the column)
        btn_lastActionPerformed(evt);
        
        //2.set the next available ID for inserting new data
        if(txt_BPID.getText().isEmpty()){
            txt_BPID.setText("1");
        } else { 
            txt_BPID.setText(String.valueOf(Integer.valueOf(txt_BPID.getText()) + 1 ));
        }
        
        //3.clear every textfield except ID
        txt_BPName.setText("");
    }
    
    //get data from database and show in the table
    private void getallData(){
        try  {

           String sqlSelectDataFromDatabase = "Select"
                                            + "\"BP_ID\""
                                            + ",\"BP_NAME\""
                                            + ",\"BP_CLASS\""
                                            + ",\"BP_GROUP\""
                                            + ",\"BP_TYPE\""
                                            + ",\"BP_EMAIL\""
                                            + "from \"BP_TBL\" order by \"BP_ID\" asc";
           preStatement = dbconnection.prepareStatement(sqlSelectDataFromDatabase);
           result = preStatement.executeQuery();
           clearTable(); // To Clear Existing Data
           while(result.next()) {
               String BPName = result.getString("BP_ID");
               String BPID = result.getString("BP_NAME");
               int BPClass = result.getInt("BP_CLASS");
               int BPGroup = result.getInt("BP_GROUP");
               int BPType = result.getInt("BP_TYPE");
               String BPEmail = result.getString("BP_EMAIL");

               DefaultTableModel dftable = (DefaultTableModel) tbl_BP.getModel();
               Object[] obj = {BPName,BPID,bpClassArr[BPClass],bpGroupArr[BPGroup],bpTypeArr[BPType],BPEmail};
               dftable.addRow(obj);
                   }
             } catch (SQLException e) {
                 printSQLException(e);
       }
    }
    
    //clear table
    private void clearTable(){
        DefaultTableModel defaultModel = (DefaultTableModel) tbl_BP.getModel();
        defaultModel.getDataVector().removeAllElements();
        revalidate();
    }
    
    //execute query
    private void ExecuteQuery(String queryType) throws SQLException {
        try{
            
            //1.connecting to database
            DatabaseConnection connection = new DatabaseConnection();
            connection.databaseConn();
            Statement statement = connection.Conn.createStatement();
            
            //2.get the user entered data
            bpID = txt_BPID.getText();
            bpName = txt_BPName.getText();
            bpClass = cbox_BPClass.getSelectedIndex();
            bpGroup = cbox_BPGroup.getSelectedIndex();
            bpType = cbox_BPType.getSelectedIndex();
            
            //3.checking query type to execute
            if(queryType=="S"){
                query = "INSERT INTO \"BP_TBL\" ("
                        + "\"BP_ID\""
                        + ",\"BP_NAME\""
                        + ",\"BP_CLASS\""
                        + ",\"BP_GROUP\""
                        + ",\"BP_TYPE\""
                        + ") VALUES ("
                        + bpID
                        + "," + "'" + bpName + "'"
                        + "," + bpClass 
                        + "," + bpGroup
                        + "," + bpType 
                        + ");";
            } else if (queryType=="U"){
                query = "UPDATE \"BP_TBL\" SET "
                        + "\"BP_NAME\"='" + bpName + "'"
                        + "\"BP_CLASS\"='" + bpClass + "'"
                        + "\"BP_GROUP\"='" + bpGroup + "'"
                        + "\"BP_TYPE\"='" + bpType + "'"
                        + "WHERE \"BP_ID\"="+ bpID + "; ";
            } else if (queryType=="D"){
                query = "DELETE FROM \"BP_TBL\" WHERE \"BP_ID\" = " + bpID + ";";
            }
            
            //4.execute query
            System.out.println(query);
            statement.execute(query);
            connection.Conn.close();
        } catch(SQLException e){
            printSQLException(e);
        }
    }
    
    //get query
    private void GetQuery(String queryType) throws SQLException {
        try{
             
            //1.connecting to database
            DatabaseConnection connection = new DatabaseConnection();
            connection.databaseConn();
            Statement statement = connection.Conn.createStatement();
                       
            //2.checking query type to execute
            if(queryType=="first"){
                query = "SELECT"
                        + "\"BP_ID\""
                        + ",\"BP_NAME\""
                        + ",\"BP_CLASS\""
                        + ",\"BP_GROUP\""
                        + ",\"BP_TYPE\""
                        + "FROM \"BP_TBL\"ORDER BY \"BP_ID\" ASC LIMIT 1;";
            }else if(queryType=="last"){
                query = "SELECT"
                        + "\"BP_ID\""
                        + ",\"BP_NAME\""
                        + ",\"BP_CLASS\""
                        + ",\"BP_GROUP\""
                        + ",\"BP_TYPE\""
                        + "FROM \"BP_TBL\"ORDER BY \"BP_ID\" DESC LIMIT 1;";
            }else if(queryType=="next"){
                if(txt_BPID.getText().isEmpty()){
                    query = "SELECT"
                            + "\"BP_ID\""
                            + ",\"BP_NAME\""
                            + ",\"BP_CLASS\""
                            + ",\"BP_GROUP\""
                            + ",\"BP_TYPE\""
                            + "FROM \"BP_TBL\"ORDER BY \"BP_ID\" ASC LIMIT 1;";
                }else{
                    nextID = Integer.valueOf(txt_BPID.getText()) + 1;
                    query = "SELECT"
                            + "\"BP_ID\","
                            + "\"BP_NAME\","
                            + "\"BP_CLASS\","
                            + "\"BP_GROUP\","
                            + "\"BP_TYPE\""
                            + " FROM \"BP_TBL\" where \"BP_ID\" = "
                            + nextID +";";
                }
            }else if(queryType=="prev"){
                if(txt_BPID.getText().isEmpty()){
                    query = "SELECT"
                            + "\"BP_ID\","
                            + "\"BP_NAME\","
                            + "\"BP_CLASS\","
                            + "\"BP_GROUP\","
                            + "\"BP_TYPE\""
                            + "FROM \"BP_TBL\"ORDER BY \"BP_ID\" DESC LIMIT 1;";
                }else{
                    prevID = Integer.valueOf(txt_BPID.getText()) - 1;
                    query = "SELECT"
                            + "\"BP_ID\","
                            + "\"BP_NAME\","
                            + "\"BP_CLASS\","
                            + "\"BP_GROUP\","
                            + "\"BP_TYPE\""
                            + "FROM \"BP_TBL\" where \"BP_ID\" = "
                            + prevID +";";
                }
            }
            
            //3.execute query & return the result
            result = statement.executeQuery(query);
            if(result.next()){
                txt_BPID.setText(result.getString("BP_ID"));
                txt_BPName.setText(result.getString("BP_NAME"));
                cbox_BPClass.setSelectedIndex(result.getInt("BP_Class"));
                cbox_BPGroup.setSelectedIndex(result.getInt("BP_Group"));
                cbox_BPType.setSelectedIndex(result.getInt("BP_Type"));
                
            }
            
        }catch(SQLException e){
            printSQLException(e);
        }
    }
    
     //Query Exception handling
    private static void printSQLException(SQLException ex) {
        for (Throwable e : ex) {
            if (e instanceof SQLException) {
                e.printStackTrace(System.err);
                System.err.println("SQLState: " + ((SQLException) e).getSQLState());
                System.err.println("Error Code: " + ((SQLException) e).getErrorCode());
                System.err.println("Message: " + e.getMessage());
                Throwable t = ex.getCause();
                while (t != null) {
                    System.out.println("Cause: " + t);
                    t = t.getCause();
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusinessPartner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusinessPartner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusinessPartner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusinessPartner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BusinessPartner bp = new BusinessPartner();
                bp.setVisible(true);
                bp.setTitle("Business Partner Data");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_del;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cbox_BPClass;
    private javax.swing.JComboBox<String> cbox_BPGroup;
    private javax.swing.JComboBox<String> cbox_BPType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_BPAddress;
    private javax.swing.JLabel lbl_BPCity;
    private javax.swing.JLabel lbl_BPClass;
    private javax.swing.JLabel lbl_BPDistrict;
    private javax.swing.JLabel lbl_BPEmail;
    private javax.swing.JLabel lbl_BPGroup;
    private javax.swing.JLabel lbl_BPID;
    private javax.swing.JLabel lbl_BPJoinDate;
    private javax.swing.JLabel lbl_BPName;
    private javax.swing.JLabel lbl_BPPhone;
    private javax.swing.JLabel lbl_BPStatus;
    private javax.swing.JLabel lbl_BPTownship;
    private javax.swing.JLabel lbl_BPType;
    private javax.swing.JLabel lbl_BusinessPartner;
    private javax.swing.JPanel pnl_Header;
    private javax.swing.JPanel pnl_actionButtons;
    private javax.swing.JPanel pnl_form;
    private javax.swing.JPanel pnl_navigationButtons;
    private javax.swing.JTable tbl_BP;
    private javax.swing.JTextField txt_BPAddress;
    private javax.swing.JTextField txt_BPCity;
    private javax.swing.JTextField txt_BPDistrict;
    private javax.swing.JTextField txt_BPEmail;
    public javax.swing.JTextField txt_BPID;
    private javax.swing.JTextField txt_BPJoinDate;
    private javax.swing.JTextField txt_BPName;
    private javax.swing.JTextField txt_BPPhone;
    private javax.swing.JTextField txt_BPStatus;
    private javax.swing.JTextField txt_BPTownship;
    // End of variables declaration//GEN-END:variables
    private String query = null; // to temporarily storing query statement for execution
    ResultSet result = null; // to store data returned from query execution
    PreparedStatement preStatement;
    Connection dbconnection;
    int nextID;
    int prevID;
    String[] bpClassArr = {"", "Supplier", "Employee", "Customer"};
    String[] bpGroupArr = {"", "Gp-1", "Gp-2", "Gp-3"};
    String[] bpTypeArr = {"", "Type-1", "Type-2", "Type-3"};
    String bpID;
    String bpName;
    int bpType;
    int bpGroup;
    int bpClass;
    String bpEmail;

}
